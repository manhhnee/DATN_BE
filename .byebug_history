continue
current_user.reports
continue
current_user.reports
current_user
continue
current_user.id
current_user
continue
params[:user_id]
params[:id]
params
continue
current_user
curren_user
continue
time_in
continue
time_in
continue
time_in
continue
time_in
continue
time_in
continue
time_in
continue
date
time_in
continue
regular_hours_worked = limited_time_out.hour - time_in.hour
limited_time_out
[time_in.hour, 10].max
time_out
time_in
 regular_hours_worked = limited_time_out.hour - [time_in.hour, 10].max
limited_time_out = time_out.hour < 10 ? time_out : [time_out, regular_work_end_time].min
ited_time_out = time_out.hour < 10 ? time_out : [time_out, regular_work_end_time].min
 regular_work_end_time = Time.zone.local(time_out.year, time_out.month, time_out.day, 10, 0, 0)
time_in = Time.zone.local(time_in.year, time_in.month, time_in.day, 1, 0, 0) if time_in.hour < 1
continue
regular_hours_worked = limited_time_out.hour - [time_in.hour, 17].max
limited_time_out = time_out.hour < 10 ? time_out : [time_out, regular_work_end_time].min
regular_work_end_time = Time.zone.local(time_out.year, time_out.month, time_out.day, 10, 0, 0)
time_in = Time.zone.local(time_in.year, time_in.month, time_in.day, 1, 0, 0) if time_in.hour < 1
time_in.hour >= 17
time_out
time_in
continue
regular_hours
date
continue
date
continue
date
continue
overtime_hours
regular_hours
date
continue
date
continue
date
continue
date
basic_salary
overtime_hours
regular_hours
multiplier
continue
total_salary
continue
total_salary
continue
total_salary
continue
total_salary
continue
total_salary
continue
 check_out = attendances.map(&:time_check).max
check_in = attendances.map(&:time_check).min
check_out
check_in
check)in
continue
overtime_hours
regular_work_end_time
time_out
regular_minutes_worked
regular_hours_worked
limited_time_out
regular_work_end_time
time_out
time_in
continue
regular_work_end_time
time_out
continue
overtime_hours
regular_work_end_time
time_out
time_in
continue
regular_work_end_time
time_out
overtime_hours
total_regular_hours
regular_minutes_worked
regular_hours_worked
limited_time_out
regular_work_end_time
time_out
time_in
continue
time_out
time_in
continue
time_out
time_in
continue
basic_salary
total_salary
time_in
attendances
existing_salaries
basic_salary
continue
existing_salaries
basic_salary
continue
user
basic_salary
user
user_id
existing_salaries
continue
File.delete(processed_file_path) if File.exist?(processed_file_path)
public_url = storage_service.upload(processed_file_path.to_s, File.open(processed_file_path, "rb"))
storage_service = GoogleCloudStorageService.new
 processed_file_path = Rails.root.join("dataset", "#{user_id}.#{output}.jpg")
image_data
continue
status.success?
status.success ?
status
command
image_data
continue
image_data.split(",")[1]
image_data
image_data = params[:image]
image_data
params[:image]
params[:frame]
params[:frame
params
image_data
status.success?
status.success
status
exit
User.find_by(id: params[:user_id])
User.fing_by(id: params[:user_id])
params[:user_id]
params
user
continue
params[:user_id]
params[:image]
params[:img_path]
params[:image_path]
params
